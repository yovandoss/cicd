# name: Simple Action

# on:
#   push:
#     branches:
#       - main  # Trigger on push to the 'main' branch

# jobs:
#   simple-job:
#     runs-on: windows-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Run a simple command
#         run: echo "This is a simple action run on push to main!"


# name: Deploy .NET 7 Application to Windows

# on:
#   push:
#     branches:
#       - main  # Trigger on push to the 'main' branch

# jobs:
#   build_and_deploy:
#     runs-on: windows-latest  # Use a Windows environment for the job

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3  # Checkout the repository

#       - name: Set up .NET 7 SDK
#         uses: actions/setup-dotnet@v3
#         with:
#           dotnet-version: '7.0.x'  # Specify .NET 7 version

#       - name: Restore dependencies
#         run: dotnet restore  # Restore NuGet dependencies

#       - name: Build application
#         run: dotnet build --configuration Release  # Build the application in Release mode

#       - name: Publish application
#         run: dotnet publish --configuration Release --output ./publish  # Publish the app to a folder

#       - name: Deploy to Windows Server
#         run: |
#           # You may use PowerShell, SCP, or any other tool to deploy the app
#           # Here we are using a basic example of copying files over to a server
          
#           # Set up deployment path and server details
#           $deploymentPath = "C:\path\to\deployment\folder"
#           $serverAddress = "your-server-address"  # Replace with actual server address
          
#           # Example command to copy files over
#           New-Item -ItemType Directory -Force -Path $deploymentPath
#           Copy-Item -Recurse ./publish/* $deploymentPath
          
#           # Restart the application on the server (adjust based on how your app runs)
#           Restart-Service -Name "YourAppServiceName"  # Adjust for your service name
          
#         shell: pwsh  # Use PowerShell shell for Windows commands

- name: Test WinRM Connection
  shell: pwsh
  run: |
    $targetServer = "http://34.83.158.247:5985"
    $username = "Felixcruze"
    $password = ConvertTo-SecureString "4rUkgqyHoKy!50C" -AsPlainText -Force
    $credential = New-Object System.Management.Automation.PSCredential ($username, $password)

    Test-WSMan -ComputerName 34.83.158.247 -Authentication Basic -Credential $credential


